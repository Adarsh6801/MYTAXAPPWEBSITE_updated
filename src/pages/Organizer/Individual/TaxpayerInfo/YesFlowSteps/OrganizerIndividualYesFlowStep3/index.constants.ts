import i18n from "../../../../../../i18n";
import {
  QUESTION_TYPE_ANSWER,
  ORGANIZER_CATEGORY_ID,
} from "../../../../../../constants/organizer";
import states from "../../../../../../assets/json/states.json";

export const dataTaxpayerQuestion = [
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "haveMarriageStatusChangedSinceLastFiledReturn",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "marriageStatusChangedDate",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    file: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseFirstName",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseBirthday",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseSocialSecurityNo",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseOccupation",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseMobileNumber",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "isSpouseLegallyBlind",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseDriversLicense",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseDriversLicenseState",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseDriversLicenseIssuedDate",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseDriversLicenseExpiresDate",
    answer: null,
    message: "",
    reminder: false,
    isFile: false,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "spouseImagesOfDriversLicense",
    answer: null,
    message: "",
    reminder: false,
    isFile: true,
    files: null,
  },
  {
    categoryId: ORGANIZER_CATEGORY_ID.filingStatusChanges,
    forSpouse: false,
    question: "isSpouseLegallyBlind",
    answer: null,
    message: "",
    reminder: false,
    isFile: true,
    files: null,
  },
];

export const DATA_KEY = [
  "haveMarriageStatusChangedSinceLastFiledReturn",
  "marriageStatusChangedDate",
  "spouseFirstName",
  "spouseBirthday",
  "spouseSocialSecurityNo",
  "spouseOccupation",
  "spouseMobileNumber",
  "isSpouseLegallyBlind",
  "spouseDriversLicense",
  "spouseDriversLicenseState",
  "spouseDriversLicenseIssuedDate",
  "spouseDriversLicenseExpiresDate",
  "spouseImagesOfDriversLicense",
];

export const radioButtons: any[] = [
  {
    label: i18n.t("organizer.individual.yes_flow.step3.no_change_last_year"),
    value: 0,
    hasDate: false,
  },
  {
    label: i18n.t("organizer.individual.yes_flow.step3.married"),
    value: 1,
    hasDate: true,
  },
  {
    label: i18n.t("organizer.individual.yes_flow.step3.separated"),
    value: 2,
    hasDate: true,
  },
  {
    label: i18n.t("organizer.individual.yes_flow.step3.divorced"),
    value: 3,
    hasDate: true,
  },
];

export const dataState = states.map(state => ({
  label: state.name,
  value: state.name,
}));
